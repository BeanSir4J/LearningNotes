package com.springbootmybatis.springbootmybatis;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.Map;

import javax.imageio.ImageIO;

import org.junit.Test;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

public class Java8Tester {
   
		<!-- https://mvnrepository.com/artifact/com.google.zxing/core -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.3.3</version>
		</dependency>


	int width =100;
	int height=100;
	String format="png";
	String content="龟儿子煞笔";
	/**
	 * 生成二维码
	 * @throws WriterException
	 * @throws IOException
	 */
	@Test
	public void ZXingTest() throws WriterException, IOException{
		Map map=new HashMap();
		map.put(EncodeHintType.CHARACTER_SET, "UTF-8");
		map.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.M);
		map.put(EncodeHintType.MARGIN, 2);
		
		BitMatrix bi =new MultiFormatWriter().encode(content, BarcodeFormat.QR_CODE, width, height,map);
		Path path=new File("D:/1.png").toPath();
		MatrixToImageWriter.writeToPath(bi, format, path);
	}
	
	/**
	 * 二维码解析
	 * @throws Exception
	 */
	@Test
	public void parseZXing() throws Exception{
		MultiFormatReader reader=new MultiFormatReader();
		
		File file=new File("D://1.png");
		BufferedImage image=ImageIO.read(file);
		BinaryBitmap binaryBitmap=new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(image)));
		Map map=new HashMap();
		map.put(EncodeHintType.CHARACTER_SET, "UTF-8");
		
		Result decode = reader.decode(binaryBitmap);
		System.err.println(decode.toString());//明文
		System.err.println(decode.getBarcodeFormat());//格式
		System.err.println(decode.getText());//文本
	}

}